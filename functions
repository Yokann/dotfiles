if [[ "$OSTYPE" == "darwin"* ]]; then
    PACKAGE_INSTALLER="brew install"
elif [[ "$OSTYPE" == "linux"* ]]; then
    PACKAGE_INSTALLER="yay -S"
else
    echo "System unknown"
    exit 1
fi

DOTFILES_PATH=$HOME/.dotfiles
CURRENT_DATE=$(date "+%Y-%m-%d-%H-%M-%S")

setup_git () {
  git config --global include.path $DOTFILES_PATH/config/git/gitconfig
  git config --global core.excludesFile $DOTFILES_PATH/config/git/global-gitignore
}

setup_zsh () {
    mkdir -p $HOME/.cache/zinit/completions
    #Symlink .Xresources
    rm -f $HOME/.Xresources
    ln -s $DOTFILES_PATH/config/.Xresources $HOME/.Xresources
    cp $HOME/.zshrc "$HOME/.zshrc.bak$CURRENT_DATE"
    echo "source $DOTFILES_PATH/config/zsh/.zshrc" > $HOME/.zshrc
}

setup_tmux() {
    rm -rf $HOME/.tmux/plugins/tpm
    cp $HOME/.tmux.conf "$HOME/.tmux.conf.bak$CURRENT_DATE"
    echo "source $DOTFILES_PATH/config/tmux/tmux.conf" > $HOME/.tmux.conf
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
    echo "#################################################"
    echo "Don't forget to run Prefix + I to install plugins"
    echo "#################################################"
}

setup_vim () {
    # Config neovim require sqlite for telescope grep history
    $PACKAGE_INSTALLER neovim sqlite
    rm -rf $HOME/.config/nvim
    ln -s $DOTFILES_PATH/config/nvim $HOME/.config/nvim
    # ln -s $DOTFILES_PATH/config/phpactor $HOME/.config/phpactor
}

install_dependencies () {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        brew update
        $PACKAGE_INSTALLER --cask homebrew/cask-fonts/font-fira-code-nerd-font
    elif [[ "$OSTYPE" == "linux"* ]]; then
        pacman -Syu
        $PACKAGE_INSTALLER ttf-fira-code libtree-bin
    fi

    $PACKAGE_INSTALLER zsh fzf btop starship tmux ripgrep git-delta lazygit xclip zoxide fd gum eza
    rm -rf $HOME/.config/starship.toml
    ln -s $DOTFILES_PATH/config/starship.toml $HOME/.config/starship.toml
    rm -rf $HOME/.config/btop
    ln -s $DOTFILES_PATH/config/btop $HOME/.config/btop
}

install_docker () {
    if [[ "$OSTYPE" == "linux"* ]]; then
        $PACKAGE_INSTALLER docker docker-compose
        sudo usermod -aG docker $USER
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        $PACKAGE_INSTALLER orbstack
    fi

    $PACKAGE_INSTALLER ctop dive
}

install_dev_dependencies () {
    # GoLang
    $PACKAGE_INSTALLER go
    go install github.com/mitranim/gow@latest

    #Rust
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --no-modify-path -y
    cargo install cargo-watch
    # Install alternative linker
    if [[ "$OSTYPE" == "linux"* ]]; then
        $PACKAGE_INSTALLER lld clang
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        $PACKAGE_INSTALLER michaeleisel/zld/zld
    fi

    # Install volta.sh for Node version management
    curl https://get.volta.sh | bash
}

setup_sway () {
    $PACKAGE_INSTALLER papirus-folders-catppuccin-git
    # Todo finsih setup papirus icons 
    rm -rf $HOME/.config/sway
    ln -s $DOTFILES_PATH/config/sway $HOME/.config/sway
    rm -rf $HOME/.config/rofi
    ln -s $DOTFILES_PATH/config/rofi $HOME/.config/rofi
    rm -rf $HOME/.config/waybar
    ln -s $DOTFILES_PATH/config/waybar $HOME/.config/waybar
    rm -rf $HOME/.config/mako
    ln -s $DOTFILES_PATH/config/mako $HOME/.config/mako
    rm -rf $HOME/.config/foot
    ln -s $DOTFILES_PATH/config/foot $HOME/.config/foot
}

setup_hyprland () {
    mv $HOME/.config/hypr $HOME/.config/hypr.bak.$CURRENT_DATE
    mkdir $HOME/.config/hypr
    mkdir $HOME/.config/hypr/conf.d
    touch $HOME/.config/hypr/conf.d/overrides.conf
    echo '$configPath = $HOME/.dotfiles/config/hypr' > $HOME/.config/hypr/hyprland.conf
    echo '$wallpapersPath = $HOME/Images/wallpapers' >> $HOME/.config/hypr/hyprland.conf
    echo '$machineType = laptop' >> $HOME/.config/hypr/hyprland.conf
    echo '# env = HYPR_MAIN_MONITOR, DP-1'
    echo 'source = $configPath/hyprland.conf' >> $HOME/.config/hypr/hyprland.conf
    ln -s $DOTFILES_PATH/config/hypr/themes/2024/dots/walker $HOME/.config/walker
    ln -s $DOTFILES_PATH/config/hypr/themes/2024/dots/wofi $HOME/.config/wofi
    xdg-mime default nvim.desktop text/plain
    # replace pcmanfm with yazi.desktop if you want to use yazi as file manager
    xdg-mime default pcmanfm.desktop inode/directory
    # set qwerty layout for login prompt
    localectl set-x11-keymap us pc105
    mkdir $HOME/.xkb/symbols
    ln -s $DOTFILES_PATH/config/qwerty-l.xkb_symbols $HOME/.xkb/symbols/fr
}

# vim: ft=sh
