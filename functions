#!/usr/bin/env bash

if [[ "$OSTYPE" == "darwin"* ]]; then
    PACKAGE_INSTALLER="brew install"
elif [[ "$OSTYPE" == "linux"* ]]; then
    PACKAGE_INSTALLER="yay -S"
else
    echo "System unknown"
    exit 1
fi

setup_git () {
  git config --global include.path $HOME/.dotfiles/config/git/gitconfig
  git config --global core.excludesFile $HOME/.dotfiles/config/git/global-gitignore
}

setup_zsh () {
    #Symlink .Xresources
    rm -f $HOME/.Xresources
    ln -s $HOME/.dotfiles/config/.Xresources $HOME/.Xresources
    # Symlink zsh prefs
    rm -rf $HOME/.zinit
    rm $HOME/.zshrc
    ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc
    touch $HOME/.zshrc_custom
}

setup_tmux() {
    rm -f $HOME/.tmux.conf
    ln -s $HOME/.dotfiles/config/tmux/tmux.conf $HOME/.tmux.conf
    rm -rf $HOME/.tmux/plugins/tpm
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
}

setup_vim () {
    # Symlink vim prefs
    rm $HOME/.vimrc
    ln -s $HOME/.dotfiles/shell/.vimrc $HOME/.vimrc
    # Config neovim
    $PACKAGE_INSTALLER neovim sqlite
    rm -rf $HOME/.config/nvim
    ln -s $HOME/.dotfiles/config/nvim $HOME/.config/nvim
    # ln -s $HOME/.dotfiles/config/phpactor $HOME/.config/phpactor
}

install_dependencies () {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        brew update
        $PACKAGE_INSTALLER --cask homebrew/cask-fonts/font-fira-code-nerd-font
    elif [[ "$OSTYPE" == "linux"* ]]; then
        pacman -Syu
        $PACKAGE_INSTALLER ttf-fira-code
    fi

    $PACKAGE_INSTALLER zsh fzf htop starship tmux ripgrep git-delta lazygit xclip
    rm -rf $HOME/.config/starship.toml
    ln -s $HOME/.dotfiles/config/starship.toml $HOME/.config/starship.toml
}

install_docker () {
    if [[ "$OSTYPE" == "linux"* ]]; then
        $PACKAGE_INSTALLER docker docker-compose
        sudo usermod -aG docker $USER
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        $PACKAGE_INSTALLER orbstack
    fi

    $PACKAGE_INSTALLER ctop
}

install_dev_dependencies () {
    # GoLang
    $PACKAGE_INSTALLER go
    go install github.com/mitranim/gow@latest

    #Rust
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --no-modify-path -y
    cargo install cargo-watch
    # Install alternative linker
    if [[ "$OSTYPE" == "linux"* ]]; then
        $PACKAGE_INSTALLER lld clang
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        $PACKAGE_INSTALLER michaeleisel/zld/zld
    fi

    # Install volta.sh for Node version management
    curl https://get.volta.sh | bash

    #Setup PHP
    #$PACKAGE_INSTALLER php81 php81-bz2 php81-cli php81-curl php81-fpm php81-gd php81-iconv php81-imagick /
    #php81-intl php81-ldap php81-mbstring php81-mcrypt php81-mysql php81-opcache php81-openssl /
    #php81-pdo php81-phar php81-tokenizer php81-xdebug php81-xml php81-zip php81-dom php81-xsl

    #VIM PHP Debugger & LSP 
    #$PACKAGE_INSTALLER phpactor 
    #git clone https://github.com/xdebug/vscode-php-debug.git $HOME/.local/lib/vscode-php-debug
}

setup_i3 () {
    # Install dependencies
    ## Todo move on termite to alacritty
    $PACKAGE_INSTALLER otf-font-awesome-5-free otf-hermit
    sudo pacman -S termite rofi polybar nemo playerctl

      #Config i3
      rm $HOME/.i3/config
      ln -s $HOME/.dotfiles/config/.i3/config $HOME/.i3/config

      #Config termite
      rm -rf $HOME/.config/termite
      ln -s $HOME/.dotfiles/config/termite $HOME/.config/termite

      #Config rofi
      rm -rf $HOME/.config/rofi
      ln -s $HOME/.dotfiles/config/rofi $HOME/.config/rofi
}

# if [[ "$OSTYPE" == "linux"* ]]; then
#     read -p "Setup Perso (Y/n)?" personalConfig
#     personalConfig=${personalConfig:-Y}
#
#     if [ "$personalConfig" != "${personalConfig#[Yy]}" ] ;then
#        sudo pacman -S mpv streamlink
#        # Corsair Keyboard 
#        rm -r $HOME/.config/ckb-next
#        ln -s $HOME/.dotfiles/config/ckb-next $HOME/.config/ckb-next
#     fi
# fi
