#!/usr/bin/env sh

if [ $# -eq 0 ]; then
	echo "Usage: $0 --title | --arturl | --artist | --length | --album | --source"
	exit 1
fi

get_metadata() {
	key=$1
	playerctl metadata --format "{{ $key }}" 2>/dev/null
}


get_source_info() {
	trackid=$(get_metadata "mpris:trackid")
	if [[ "$trackid" == *"firefox"* ]]; then
		echo -e "Firefox 󰈹 "
	elif [[ "$trackid" == *"cider"* ]]; then
		echo -e "Apple Music  "
	elif [[ "$trackid" == *"chromium"* ]]; then
		echo -e "Chrome  "
	else
		echo ""
	fi
}

download_cover() {
    export HYPRLOCK_COVER_URL_HASH=$2
    wget -q -O "/tmp/hyprlock_album_cover.jpeg" "$1"
    if [ $? -ne 0 ]; then
        cp -f "$HYPR_CONFIG_PATH/assets/images/album_placeholder.jpg" "/tmp/hyprlock_album_cover.jpeg"
    fi
}

# Parse the argument
case "$1" in
--title)
	title=$(get_metadata "xesam:title")
	if [ -z "$title" ]; then
		echo ""
	else
		echo "${title:0:50}"
	fi
	;;
--artFile)
    url=$(get_metadata "mpris:artUrl")
    if [ -z "$url" ]; then
        echo ""
    else
        if [[ "$url" == file://* ]]; then
            url=${url#file://}
            echo "$url"
            exit
        fi

        if [[ "$url" == http* ]]; then
            url=$(sed "s/{f}/jpeg/g" <<< "$url") # replace {f} with jpeg for Apple URL
            hash=$(echo "$url" | md5sum | cut -d ' ' -f 1)
            if [[ $HYPRLOCK_COVER_URL_HASH != $hash ]]; then
                download_cover "$url" "$hash"
            fi
        fi
        echo "/tmp/hyprlock_album_cover.jpeg"
    fi
    ;;
--arturl)
	url=$(get_metadata "mpris:artUrl")
	if [ -z "$url" ]; then
		echo ""
	else
		if [[ "$url" == file://* ]]; then
			url=${url#file://}
            echo "$url"
            exit
		fi

        echo "$url"
	fi
	;;
--artist)
	artist=$(get_metadata "xesam:artist")
	if [ -z "$artist" ]; then
		echo ""
	else
		echo "${artist:0:50}"
	fi
	;;
--length)
	length=$(get_metadata "duration(mpris:length)")
	if [ -z "$length" ]; then
		echo ""
	else
        echo $length
	fi
	;;
--status)
	status=$(playerctl status 2>/dev/null)
	if [[ $status == "Playing" ]]; then
		echo "󰎆 "
	elif [[ $status == "Paused" ]]; then
		echo "󱑽 "
	else
		echo ""
	fi
	;;
--album)
	album=$(playerctl metadata --format "{{ xesam:album }}" 2>/dev/null)
	if [[ -n $album ]]; then
		echo "$album"
	else
		status=$(playerctl status 2>/dev/null)
		if [[ -n $status ]]; then
			echo "Not album"
		else
			echo ""
		fi
	fi
	;;
--source)
	get_source_info
	;;
*)
	echo "Invalid option: $1"
	echo "Usage: $0 --title | --url | --artist | --length | --album | --source"
	exit 1
	;;
esac
