#!/bin/bash

if [[ "$OSTYPE" == "darwin"* ]]; then
    twitch_cli_config_path="$HOME/Library/Application Support/twitch-cli"
elif [[ "$OSTYPE" == "linux"* ]]; then
    twitch_cli_config_path="$HOME/.config/twitch-cli"
else
    exit 1
fi

if [ ! -f "$twitch_cli_config_path/.twitch-cli.env" ]; then
    twitch token -u -s 'chat:read user:read:email chat:edit user:read:follows whispers:edit whispers:read'
fi

if [ ! -d /tmp/twitch ]; then
    mkdir /tmp/twitch
fi

cacheFile="/tmp/twitch/live_channels.json"
if [ -f $cacheFile ]; then
    lastModificationSeconds=$(date -r $cacheFile +%s)
    currentSeconds=$(date +%s)
    if [ $((currentSeconds - lastModificationSeconds)) -lt 60 ]; then
        cat $cacheFile | jq -r '.data'
        exit 0
    fi
fi

user_id=$(twitch api get /users | jq -r '.data[0].id') # will refresh the token
live_channels=$(twitch api get /streams/followed -q user_id=$user_id -q limit=100)
for id in $(jq -r '.data[] | .user_id' <<< $live_channels); do
    query_params="$query_params -q id=$id"
done
users=$(twitch api get /users $query_params)

for user in $(echo $users | jq -r -c '.data[] | {"id":.id, "profile_image_url":.profile_image_url}'); do
    # echo $user
    id=$(echo $user | jq -r '.id')
    if [ $? -ne 0 ]; then
       continue 
    fi
    if [ ! -f "/tmp/twitch/$id.jpg" ]; then
        profile_image_url=$(jq -r '.profile_image_url' <<< $user)
        wget -q -O /tmp/twitch/$id.jpg "$profile_image_url"
    fi
done

echo $live_channels > $cacheFile

echo $live_channels | jq -r '.data'
