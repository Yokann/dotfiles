#!/bin/bash

if [[ "$OSTYPE" == "darwin"* ]]; then
    twitch_cli_config_path="$HOME/Library/Application Support/twitch-cli"
elif [[ "$OSTYPE" == "linux"* ]]; then
    twitch_cli_config_path="$HOME/.config/twitch-cli"
else
    exit 1
fi

if [ ! -f "$twitch_cli_config_path/.twitch-cli.env" ]; then
    twitch-cli token -u -s 'chat:read user:read:email chat:edit user:read:follows whispers:edit whispers:read'
fi

chat="false"
menu="false"
video="true"
while getopts ":cmn" option; do
    case $option in
        c) # chat
            chat="true";;
        n)
            video="false";;
        m) # dmenu
            menu="true";;
        \?) # Invalid option
            echo "Error: Invalid option"
            exit;;
    esac
done

user_id=$(twitch-cli api get /users | jq -r '.data[0].id') # will refresh the token
source "$twitch_cli_config_path/.twitch-cli.env" 2> /dev/null  # source to load ACCESSTOKEN as a variable

live_channels=$(twitch-cli api get /streams/followed -q user_id=$user_id -q limit=100)

if [ $menu == "true" ]; then
    selected_channel=$(echo $live_channels | jq -r '.data[] | .user_name' | walker -d)
else
    selected_channel=$(echo $live_channels | jq -r '.data[] | [.user_name, .title] | @csv' | gum table -c "Channel,Title" -w "20,200" | cut -d',' -f1)
fi

# Prompt to choose a channel
if [ -z "$selected_channel" ]; then
    echo "No live channel selected"
    exit 1
fi

if [ $video == "true" ]; then
    echo "Lauching stream of $selected_channel"
    streamlink -Q "--twitch-api-header=Authorization=Bearer $ACCESSTOKEN" https://www.twitch.tv/$selected_channel &
fi

if [ $chat == "true" ]; then
    # echo "oauth:$ACCESSTOKEN"
    TWT_TOKEN="oauth:$ACCESSTOKEN" twt -c $selected_channel
fi
