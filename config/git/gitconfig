[core]
    pager = delta

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      

[merge]
    tool = vim_mergetool
    conflictstyle = diff3

[mergetool "vim_mergetool"]
    cmd = nvim -c "DiffviewOpen"

[diff]
    colorMoved = default

[pull]
	rebase = false

[rebase]
	autosquash = true

[push]
    default = current

[alias]
    # Thanks to https://github.com/whiteinge/dotfiles/blob/9b3650b05fcbb1716bc24206efad4612a57d156f/.gitconfig

    # Perform a merge in-memory and output if any conflicts are found (dry-run)
    # Usage: git mergetest otherbranch
    mergetest = "!sh -c 'git merge-tree \
            $(git merge-base ${1:?Missing branch} HEAD) \
        ${1:?Missing branch} HEAD \
        | awk '\\''/<<<<<<</ { print \"Conflicts found\"; exit 1 }'\\''' -"

    # Prune any deleted remote branches and also delete any local branches of
    # the same name. Will prompt before deleting the local branches.
    # This is useful if branches are squashed when merged since you can't know
    # which local/remote branches are the same after that.
    # Usage: git deletepruned origin
    deletepruned = "!zsh -c ' \
        comm -12 \
            <(git remote prune \"${1:?Remote name required.}\" \
                | awk -v remote=\"$1\" '\\''$0 ~ \".*pruned.*\" remote \"/\" \
                    { sub(\"^\" remote \"/\", \"\", $3); print $3 }'\\'') \
            <(git branch --list | sed -e '\\''s/^[ \\*]\\+//g'\\'') \
        | xargs -p -r git branch -D \
    ' -"
